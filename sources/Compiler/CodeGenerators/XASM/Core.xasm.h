".define TRUE			1\n"
".define FALSE			0\n"
".define NULL			0\n"
".define FIELD_REFCOUNT	0\n"
".define FIELD_TYPEID	4\n"
".define FIELD_VTABLE	8\n"
".define FIELD_SIZE		12\n"
".define FIELD_BUFSIZE	16\n"
".define FIELD_BUFFER	20\n"
".define TYPEID_OBJECT	0\n"
".define TYPEID_STRING	1\n"
".define TYPEID_ARRAY	2\n"
".define SIZEOF_STRING	24\n"
".define MIN_BUFSIZE		32\n"
"exit:\n"
"stop\n"
"new:\n"
"ldw $r0, ($lb) -4\n"
"push $r0\n"
"insc AllocMem\n"
"mov $r0, 1\n"
"stw $r0, ($ar) %FIELD_REFCOUNT\n"
"ldw $r0, ($lb) -8\n"
"stw $r0, ($ar) %FIELD_TYPEID\n"
"ldw $r0, ($lb) -12\n"
"stw $r0, ($ar) %FIELD_VTABLE\n"
"ret 3\n"
"inc_ref:\n"
"mov $cf, $xr\n"
"je .end\n"
"ldw $r0, ($xr) %FIELD_REFCOUNT\n"
"inc $r0\n"
"stw $r0, ($xr) %FIELD_REFCOUNT\n"
".end:\n"
"ret\n"
"dec_ref:\n"
"mov $cf, $xr\n"
"je .end\n"
"ldw $r0, ($xr) %FIELD_REFCOUNT\n"
"cmp $r0, 1\n"
"je .rel\n"
"dec $r0\n"
"stw $r0, ($xr) %FIELD_REFCOUNT\n"
"ret\n"
".rel:\n"
"ldw $r0, ($xr) %FIELD_VTABLE\n"
"ldw $r0, ($r0) 0\n"
"push $xr\n"
"call $r0\n"
"insc FreeMem\n"
".end:\n"
"ret\n"
"dynamic_cast:\n"
"ldw $cf, ($lb) -4\n"
"je .end\n"
"mov $ar, $cf\n"
"ldw $r1, ($ar) %FIELD_TYPEID\n"
"ldw $r2, ($lb) -8\n"
"ldw $r3, ($lb) -12\n"
"add $r3, $r3, $r2\n"
"cmp $r2, $r1\n"
"jg .end\n"
"cmp $r1, $r3\n"
"jg .end\n"
"ret 3\n"
".end:\n"
"mov $ar, %NULL\n"
"ret 3\n"
"resize_buffer:\n"
"ldw $r0, ($lb) -4\n"
"ldw $r1, ($xr) %FIELD_BUFSIZE\n"
"cmp $r0, $r1\n"
"jle .else\n"
"ldw $r2, ($xr) %FIELD_SIZE\n"
"ldw $r3, ($xr) %FIELD_BUFFER\n"
"sll $r4, $r0, 1\n"
"push $r4\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"stw $r4, ($xr) %FIELD_BUFSIZE\n"
"push $r2\n"
"push $r3\n"
"push $ar\n"
"insc CopyMem\n"
"push $r3\n"
"insc FreeMem\n"
"push 0\n"
"sub $r3, $r0, $r2\n"
"push $r3\n"
"add $r3, $ar, $r2\n"
"push $r3\n"
"insc FillMem\n"
"jmp .end\n"
".else:\n"
"slr $r1, $r1, 1\n"
"cmp $r0, $r1\n"
"jge .end\n"
"ldw $r2, ($xr) %FIELD_SIZE\n"
"ldw $r3, ($xr) %FIELD_BUFFER\n"
"mov $r1, $r0\n"
"cmp $r1, %MIN_BUFSIZE\n"
"jge .gt_min\n"
"mov $r1, %MIN_BUFSIZE\n"
".gt_min:\n"
"push $r1\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"stw $r1, ($xr) %FIELD_BUFSIZE\n"
"push $r0\n"
"push $r3\n"
"push $ar\n"
"insc CopyMem\n"
"push $r3\n"
"insc FreeMem\n"
".end:\n"
"stw $r0, ($xr) %FIELD_SIZE\n"
"ret 1\n"
"String.copy_literal:\n"
"ldw $r0, ($lb) -4\n"
"push 24\n"
"insc AllocMem\n"
"mov $xr, $ar\n"
"push $r0\n"
"call CString.Pinit,R@String?source\n"
"mov $ar, $xr\n"
"ret 1\n"
"CObject.Prelease:\n"
"CObject.Pinit:\n"
"ret\n"
"CObject.PrefCount:\n"
"ldw $ar, ($xr) %FIELD_REFCOUNT\n"
"ret\n"
"CObject.PtypeID:\n"
"ldw $ar, ($xr) %FIELD_TYPEID\n"
"ret\n"
"CObject.Pequals,R@Object?rhs:\n"
"ldw $cf, ($lb) -4\n"
"je .false\n"
"ldw $r0, ($xr) %FIELD_TYPEID\n"
"ldw $r1, ($cf) %FIELD_TYPEID\n"
"cmp $r0, $r1\n"
"jne .false\n"
"mov $ar, %TRUE\n"
"ret 1\n"
".false:\n"
"mov $ar, %FALSE\n"
"ret 1\n"
"CObject.PtoString:\n"
"mov $ar, %NULL\n"
"ret\n"
"CObject.Ppointer:\n"
"add $ar, $xr, 12\n"
"ret\n"
"CString.Prelease:\n"
"ldw $r0, ($xr) %FIELD_BUFFER\n"
"push $r0\n"
"insc FreeMem\n"
"ret\n"
"CString.Pinit:\n"
"mov $r0, 1\n"
"stw $r0, ($xr) %FIELD_SIZE\n"
"mov $r1, %MIN_BUFSIZE\n"
"stw $r1, ($xr) %FIELD_BUFSIZE\n"
"push %MIN_BUFSIZE\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"stw $r0, ($ar) 0\n"
"ret\n"
"CString.Pequals,R@Object?rhs:\n"
"ldw $cf, ($lb) -4\n"
"je .false\n"
"mov $tr, $cf\n"
"ldw $r0, ($xr) %FIELD_TYPEID\n"
"ldw $r1, ($tr) %FIELD_TYPEID\n"
"cmp $r0, $r1\n"
"jne .false\n"
"ldw $r0, ($xr) %FIELD_SIZE\n"
"ldw $r1, ($tr) %FIELD_SIZE\n"
"cmp $r0, $r1\n"
"jne .false\n"
"ldw $r2, ($xr) %FIELD_BUFFER\n"
"ldw $r3, ($tr) %FIELD_BUFFER\n"
".loop:\n"
"mov $cf, $r0\n"
"jle .break\n"
"ldw $r4, ($r2) 0\n"
"ldw $r5, ($r3) 0\n"
"cmp $r4, $r5\n"
"jne .false\n"
"inc $r2\n"
"inc $r3\n"
"dec $r0\n"
"jmp .loop\n"
".break:\n"
"mov $ar, %TRUE\n"
"ret 1\n"
".false:\n"
"mov $ar, %FALSE\n"
"ret 1\n"
"CString.Pinit,I?size:\n"
"call CString.Pinit\n"
"ldw $r0, ($lb) -4\n"
"push $r0\n"
"call CString.Presize,I?size\n"
"ret 1\n"
"CString.Pinit,I?char,I?count:\n"
"ldw $r0, ($lb) -4\n"
"ldw $r1, ($lb) -8\n"
"mov $cf, $r0\n"
"jge .char_gz\n"
"mov $r0, 0\n"
"jmp .clamped_char\n"
".char_gz:\n"
"cmp $r0, 127\n"
"jle .clamped_char\n"
"mov $r0, 0\n"
".clamped_char:\n"
"mov $cf, $r1\n"
"jge .clamped_count\n"
"mov $r1, 0\n"
".clamped_count:\n"
"add $r2, $r1, 1\n"
"stw $r2, ($xr) %FIELD_SIZE\n"
"cmp $r2, %MIN_BUFSIZE\n"
"jge .gt_min\n"
"mov $r2, %MIN_BUFSIZE\n"
".gt_min:\n"
"stw $r2, ($xr) %FIELD_BUFSIZE\n"
"push $r2\n"
"insc AllocMem\n"
"mov $r3, $ar\n"
"stw $r3, ($xr) %FIELD_BUFFER\n"
"mov $cf, $r1\n"
".loop:\n"
"jle .end\n"
"stb $r0, ($r3) 0\n"
"inc $r3\n"
"dec $cf\n"
"jmp .loop\n"
".end:\n"
"mov $tr, 0\n"
"stw $tr, ($r3) 0\n"
"ret 2\n"
"CString.Pinit,R@String?source:\n"
"ldw $cf, ($lb) -4\n"
"je .end\n"
"push 20\n"
"push $cf\n"
"push $xr\n"
"insc CopyMem\n"
"ldw $r1, ($cf) %FIELD_SIZE\n"
"push $r1\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"ldw $cf, ($cf) %FIELD_BUFFER\n"
"push $r1\n"
"push $cf\n"
"push $ar\n"
"insc CopyMem\n"
".end:\n"
"ret 1\n"
"CString.Pinit,R@String?source,I?from,I?length:\n"
"ldw $cf, ($lb) -4\n"
"je .break\n"
"mov $r0, $cf\n"
"ldw $cf, ($lb) -8\n"
"jl .break\n"
"mov $r1, $cf\n"
"ldw $cf, ($lb) -12\n"
"jge .not_neg\n"
"ldw $cf, ($r0) %FIELD_SIZE\n"
"dec $cf\n"
"sub $cf, $cf, $r1\n"
".not_neg:\n"
"mov $r2, $cf\n"
"ldw $r3, ($r0) %FIELD_SIZE\n"
"add $r4, $r1, $r2\n"
"inc $r4\n"
"cmp $r4, $r3\n"
"jg .break\n"
"add $r4, $r2, 1\n"
"stw $r4, ($xr) %FIELD_SIZE\n"
"cmp $r4, %MIN_BUFSIZE\n"
"jge .gt_min\n"
"mov $r4, %MIN_BUFSIZE\n"
".gt_min:\n"
"stw $r4, ($xr) %FIELD_BUFSIZE\n"
"push $r4\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"ldw $r0, ($r0) %FIELD_BUFFER\n"
"add $r0, $r0, $r1\n"
"push $r2\n"
"push $r0\n"
"push $ar\n"
"insc CopyMem\n"
"mov $r0, 0\n"
"add $r1, $ar, $r2\n"
"stb $r0, ($r1) 0\n"
"ret 3\n"
".break:\n"
"call CString.Pinit\n"
"ret 3\n"
"CString.PtoString:\n"
"call inc_ref\n"
"mov $ar, $xr\n"
"ret\n"
"CString.Ppointer:\n"
"CArray.Ppointer:\n"
"CIntArray.Ppointer:\n"
"CFloatArray.Ppointer:\n"
"CBoolArray.Ppointer:\n"
"CBuffer.Ppointer:\n"
"ldw $ar, ($xr) %FIELD_BUFFER\n"
"ret\n"
"CString.Pcopy:\n"
"push @String.vtable\n"
"push %TYPEID_STRING\n"
"push %SIZEOF_STRING\n"
"call new\n"
"push $ar\n"
"push $xr\n"
"mov $xr, $ar\n"
"call CString.Pinit,R@String?source\n"
"pop $ar\n"
"ret\n"
"CString.Psize:\n"
"ldw $ar, ($xr) %FIELD_SIZE\n"
"dec $ar\n"
"ret\n"
"CString.Presize,I?size:\n"
"ldw $cf, ($lb) -4\n"
"jge .else\n"
"mov $cf, 0\n"
".else:\n"
"add $tr, $cf, 1\n"
"ldw $cf, ($xr) %FIELD_SIZE\n"
"cmp $cf, $tr\n"
"je .end\n"
"push $tr\n"
"call resize_buffer\n"
"ldw $r0, ($xr) %FIELD_BUFFER\n"
"add $r0, $r0, $tr\n"
"mov $tr, 0\n"
"stw $tr, ($r0) -1\n"
".end:\n"
"ret 1\n"
"CString.Padjust:\n"
"ldw $r0, ($xr) %FIELD_SIZE\n"
"ldw $r1, ($xr) %FIELD_BUFFER\n"
"mov $r2, 0\n"
".loop:\n"
"cmp $r2, $r0\n"
"jge .break\n"
"ldw $cf, ($r1) 0\n"
"je .break\n"
"inc $r2\n"
"inc $r1\n"
"jmp .loop\n"
".break:\n"
"push $r2\n"
"call CString.Presize,I?size\n"
"ret\n"
"CString.Pempty:\n"
"ldw $cf, ($xr) %FIELD_SIZE\n"
"dec $cf\n"
"jg .false\n"
"mov $ar, %TRUE\n"
"ret\n"
".false:\n"
"mov $ar, %FALSE\n"
"ret\n"
"CString.Pappend,R@String?rhs:\n"
"ldw $cf, ($lb) -4\n"
"je .end\n"
"mov $r0, $cf\n"
"cmp $xr, $r0\n"
"je .end\n"
"ldw $r1, ($r0) %FIELD_SIZE\n"
"cmp $r1, 1\n"
"jle .end\n"
"ldw $r2, ($xr) %FIELD_SIZE\n"
"add $r1, $r1, $r2\n"
"sub $r1, $r1, 2\n"
"push $r2\n"
"push $r0\n"
"push $r1\n"
"call CString.Presize,I?size\n"
"pop $r0\n"
"pop $r1\n"
"ldw $r2, ($xr) %FIELD_BUFFER\n"
"ldw $r3, ($r0) %FIELD_SIZE\n"
"ldw $r4, ($r0) %FIELD_BUFFER\n"
"dec $r1\n"
"dec $r3\n"
"add $r2, $r2, $r1\n"
"push $r3\n"
"push $r4\n"
"push $r2\n"
"insc CopyMem\n"
".end:\n"
"mov $ar, $xr\n"
"ret 1\n"
"CString.Pappend,R@Object?rhs:\n"
"ldw $cf, ($lb) -4\n"
"je .end\n"
"ldw $cf, ($cf) %FIELD_VTABLE\n"
"ldw $cf, ($cf) %FIELD_BUFFER\n"
"call $cf\n"
"push $ar\n"
"push $ar\n"
"call CString.Pappend,R@String?rhs\n"
"pop $xr\n"
"call dec_ref\n"
".end:\n"
"ret 1\n"
"CString.Pappend,B?rhs:\n"
"ret 1\n"
"CString.Pappend,I?rhs:\n"
"ret 1\n"
"CString.Pappend,F?rhs:\n"
"ret 1\n"
"CString.PsubString,I?from,I?length:\n"
"push @String.vtable\n"
"push %TYPEID_STRING\n"
"push %SIZEOF_STRING\n"
"call new\n"
"ldw $r0, ($lb) -4\n"
"ldw $r1, ($lb) -8\n"
"push $ar\n"
"push $r1\n"
"push $r0\n"
"push $xr\n"
"mov $xr, $ar\n"
"call CString.Pinit,R@String?source,I?from,I?length\n"
"pop $ar\n"
"ret 2\n"
"CString.Pfind,R@String?search,I?from:\n"
"mov $ar, -1\n"
"ret 2\n"
"CString.PsetChar,I?pos,I?char:\n"
"ldw $cf, ($lb) -4\n"
"jl .end\n"
"mov $r0, $cf\n"
"ldw $r1, ($xr) %FIELD_SIZE\n"
"cmp $r0, $r1\n"
"jge .end\n"
"ldw $r1, ($lb) -8\n"
"ldw $r2, ($xr) %FIELD_BUFFER\n"
"add $r2, $r2, $r0\n"
"stb $r1, ($r2) 0\n"
".end:\n"
"ret 2\n"
"CString.PgetChar,I?pos:\n"
"ldw $cf, ($lb) -4\n"
"jl .end\n"
"mov $r0, $cf\n"
"ldw $r1, ($xr) %FIELD_SIZE\n"
"cmp $r0, $r1\n"
"jge .end\n"
"ldw $r2, ($xr) %FIELD_BUFFER\n"
"add $r2, $r2, $r0\n"
"ldb $ar, ($r2) 0\n"
"ret 1\n"
".end:\n"
"mov $ar, 0\n"
"ret 1\n"
"CArray.Prelease:\n"
"ldw $r0, ($xr) %FIELD_SIZE\n"
"ldw $r1, ($xr) %FIELD_BUFFER\n"
"push $r1\n"
"mov $xr, $r1\n"
"sll $r0, $r0, 2\n"
"add $r0, $r0, $xr\n"
".loop:\n"
"cmp $xr, $r0\n"
"jge .break\n"
"push $xr\n"
"push $r0\n"
"call dec_ref\n"
"pop $r0\n"
"pop $xr\n"
"add $xr, $xr, 4\n"
"jmp .loop\n"
".break:\n"
"insc FreeMem\n"
"ret\n"
"CArray.Pinit:\n"
"CIntArray.Pinit:\n"
"CFloatArray.Pinit:\n"
"CBoolArray.Pinit:\n"
"CBuffer.Pinit:\n"
"mov $r0, 0\n"
"stw $r0, ($xr) %FIELD_SIZE\n"
"mov $r1, %MIN_BUFSIZE\n"
"stw $r1, ($xr) %FIELD_BUFSIZE\n"
"push %MIN_BUFSIZE\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"ret\n"
"CArray.Pinit,I?size:\n"
"CIntArray.Pinit,I?size:\n"
"CFloatArray.Pinit,I?size:\n"
"ldw $r0, ($lb) -4\n"
"sll $r0, $r0, 2\n"
"stw $r0, ($xr) %FIELD_SIZE\n"
"cmp $r0, %MIN_BUFSIZE\n"
"jge .gt_min\n"
"mov $r0, %MIN_BUFSIZE\n"
".gt_min:\n"
"stw $r0, ($xr) %FIELD_BUFSIZE\n"
"push $r0\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"push 0\n"
"push $r0\n"
"push $ar\n"
"insc FillMem\n"
"ret 1\n"
"CArray.Pequals,R@Object?rhs:\n"
"ret 1\n"
"CArray.PtoString:\n"
"ret\n"
"CArray.Pcopy:\n"
"CIntArray.Pcopy:\n"
"CFloatArray.Pcopy:\n"
"ret\n"
"CArray.Psize:\n"
"CIntArray.Psize:\n"
"CFloatArray.Psize:\n"
"ldw $ar, ($xr) %FIELD_SIZE\n"
"slr $ar, $ar, 2\n"
"ret\n"
"CArray.Presize,I?size:\n"
"CIntArray.Presize,I?size:\n"
"CFloatArray.Presize,I?size:\n"
"ldw $cf, ($lb) -4\n"
"jge .else\n"
"mov $cf, 0\n"
".else:\n"
"sll $tr, $cf, 2\n"
"ldw $cf, ($xr) %FIELD_SIZE\n"
"cmp $cf, $tr\n"
"je .end\n"
"push $tr\n"
"call resize_buffer\n"
".end:\n"
"ret 1\n"
"CArray.Pempty:\n"
"CIntArray.Pempty:\n"
"CFloatArray.Pempty:\n"
"ldw $cf, ($xr) %FIELD_SIZE\n"
"jg .false\n"
"mov $ar, %TRUE\n"
"ret\n"
".false:\n"
"mov $ar, %FALSE\n"
"ret\n"
"CArray.Pappend,R@Object?entry:\n"
"CIntArray.Pappend,I?entry:\n"
"CFloatArray.Pappend,F?entry:\n"
"ldw $r0, ($xr) %FIELD_SIZE\n"
"push $r0\n"
"add $r0, $r0, 4\n"
"push $r0\n"
"call resize_buffer\n"
"pop $r0\n"
"ldw $r1, ($xr) %FIELD_BUFFER\n"
"add $r1, $r1, $r0\n"
"ldw $r0, ($lb) -4\n"
"stw $r0, ($r1) 0\n"
"ret 1\n"
"CArray.Pinsert,R@Object?entry,I?pos:\n"
"ret 2\n"
"CArray.Premove,I?pos:\n"
"CIntArray.Premove,I?pos:\n"
"CFloatArray.Premove,I?pos:\n"
"ret 1\n"
"CArray.Pfind,R@Object?entry,I?from:\n"
"ret 2\n"
"CArray.Pcontains,R@Object?entry:\n"
"ret 1\n"
"CIntArray.Prelease:\n"
"CFloatArray.Prelease:\n"
"CBoolArray.Prelease:\n"
"CBuffer.Prelease:\n"
"ldw $r0, ($xr) %FIELD_BUFFER\n"
"push $r0\n"
"insc FreeMem\n"
"ret\n"
"CIntArray.Pequals,R@Object?rhs:\n"
"ret 1\n"
"CIntArray.PtoString:\n"
"ret\n"
"CIntArray.Pinsert,I?entry,I?pos:\n"
"ret 2\n"
"CIntArray.Pfind,I?entry,I?from:\n"
"ret 2\n"
"CIntArray.Pcontains,I?entry:\n"
"ret 1\n"
"CFloatArray.Pequals,R@Object?rhs:\n"
"ret 1\n"
"CFloatArray.PtoString:\n"
"ret\n"
"CFloatArray.Pinsert,F?entry,I?pos:\n"
"ret 2\n"
"CFloatArray.Pfind,F?entry,I?from:\n"
"ret 2\n"
"CFloatArray.Pcontains,F?entry:\n"
"ret 1\n"
"CBoolArray.Pinit,I?size:\n"
"ldw $cf, ($lb) -8\n"
"stw $cf, ($xr) %FIELD_SIZE\n"
"stw $cf, ($xr) %FIELD_BUFSIZE\n"
"add $cf, $cf, 7\n"
"slr $cf, $cf, 3\n"
"push $cf\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"mov $r0, 0\n"
".loop:\n"
"jle .break\n"
"stw $r0, ($ar) 0\n"
"inc $ar\n"
"dec $cf\n"
"jmp .loop\n"
".break:\n"
"ret 1\n"
"CBuffer.Pequals,R@Object?rhs:\n"
"ret 1\n"
"CBuffer.Pinit,I?size,I?fill:\n"
"ldw $cf, ($lb) -4\n"
"jge .gt_zero\n"
"mov $cf, 0\n"
".gt_zero:\n"
"stw $cf, ($xr) %FIELD_SIZE\n"
"mov $r0, $cf\n"
"cmp $r0, %MIN_BUFSIZE\n"
"jge .gt_min\n"
"mov $r0, %MIN_BUFSIZE\n"
".gt_min:\n"
"stw $r0, ($xr) %FIELD_BUFSIZE\n"
"push $r0\n"
"insc AllocMem\n"
"stw $ar, ($xr) %FIELD_BUFFER\n"
"ldw $r1, ($lb) -8\n"
"push $r1\n"
"push $r0\n"
"push $ar\n"
"insc FillMem\n"
"ret 2\n"
"CBuffer.Pcopy:\n"
"ret\n"
"CBuffer.Psize:\n"
"ldw $ar, ($xr) %FIELD_SIZE\n"
"ret\n"
"CBuffer.Presize,I?size:\n"
"ldw $cf, ($lb) -4\n"
"jge .else\n"
"mov $cf, 0\n"
".else:\n"
"mov $tr, $cf\n"
"ldw $cf, ($xr) %FIELD_SIZE\n"
"cmp $cf, $tr\n"
"je .end\n"
"push $tr\n"
"call resize_buffer\n"
".end:\n"
"ret 1\n"
"CBuffer.PwriteByte,I?offset,I?value:\n"
"ret 2\n"
"CBuffer.PreadByte,I?offset:\n"
"ret 1\n"
"CBuffer.PwriteInt,I?offset,I?value:\n"
"ret 2\n"
"CBuffer.PreadInt,I?offset:\n"
"ret 1\n"
"CBuffer.PwriteFloat,I?offset,F?value:\n"
"ret 2\n"
"CBuffer.PreadFloat,I?offset:\n"
"ret 1\n"
"CBuffer.PwriteBuffer,I?offset,I?size,R@Buffer?buffer:\n"
"ret 3\n"
"CBuffer.PreadBuffer,I?offset,I?size,R@Buffer?buffer:\n"
"ret 3\n"
"CIntrinsics.PallocMem,I?size:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc AllocMem\n"
"ret 1\n"
"CIntrinsics.PfreeMem,I?ptr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc FreeMem\n"
"ret 1\n"
"CIntrinsics.PcopyMem,I?destPtr,I?srcPtr,I?size:\n"
"ldw $tr, ($lb) -12\n"
"push $tr\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc CopyMem\n"
"ret 3\n"
"CIntrinsics.PsysCall,I?commandPtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc SysCall\n"
"ret 1\n"
"CIntrinsics.Pprint,I?textPtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Print\n"
"ret 1\n"
"CIntrinsics.PprintLn,I?textPtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc PrintLn\n"
"ret 1\n"
"CIntrinsics.PprintInt,I?value:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc PrintInt\n"
"ret 1\n"
"CIntrinsics.PprintFloat,F?value:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc PrintFloat\n"
"ret 1\n"
"CIntrinsics.Pinput,I?stringPtr,I?maxLen:\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Input\n"
"ret 2\n"
"CIntrinsics.PinputInt:\n"
"insc InputInt\n"
"ret\n"
"CIntrinsics.PinputFloat:\n"
"insc InputFloat\n"
"ret\n"
"CIntrinsics.PcreateFile,I?filenamePtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc CreateFile\n"
"ret 1\n"
"CIntrinsics.PdeleteFile,I?filenamePtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc DeleteFile\n"
"ret 1\n"
"CIntrinsics.PopenFile,I?filenamePtr,I?modePtr:\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc OpenFile\n"
"ret 2\n"
"CIntrinsics.PcloseFile,I?handlePtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc CloseFile\n"
"ret 1\n"
"CIntrinsics.PfileSetPos,I?handlePtr,I?offset,I?origin:\n"
"ldw $tr, ($lb) -12\n"
"push $tr\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc FileSetPos\n"
"ret 3\n"
"CIntrinsics.PfileGetPos,I?handlePtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc FileGetPos\n"
"ret 1\n"
"CIntrinsics.PfileEOF,I?handlePtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc FileEOF\n"
"ret 1\n"
"CIntrinsics.PwriteByte,I?handlePtr,I?value:\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc WriteByte\n"
"ret 2\n"
"CIntrinsics.PwriteInt,I?handlePtr,I?value:\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc WriteWord\n"
"ret 2\n"
"CIntrinsics.PwriteFloat,I?handlePtr,F?value:\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc WriteWord\n"
"ret 2\n"
"CIntrinsics.PwriteBuffer,I?handlePtr,I?bufferPtr,I?size:\n"
"ldw $tr, ($lb) -12\n"
"push $tr\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc WriteBuffer\n"
"ret 3\n"
"CIntrinsics.PreadByte,I?handlePtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc ReadByte\n"
"ret 1\n"
"CIntrinsics.PreadInt,I?handlePtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc ReadWord\n"
"ret 1\n"
"CIntrinsics.PreadFloat,I?handlePtr:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc ReadWord\n"
"ret 1\n"
"CIntrinsics.PreadBuffer,I?handlePtr,I?bufferPtr,I?size:\n"
"ldw $tr, ($lb) -12\n"
"push $tr\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc ReadBuffer\n"
"ret 3\n"
"CIntrinsics.Ptime:\n"
"insc Time\n"
"ret\n"
"CIntrinsics.Psleep,I?duration:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Sleep\n"
"ret 1\n"
"CMath.Psin,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Sin\n"
"ret 1\n"
"CMath.Pcos,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Cos\n"
"ret 1\n"
"CMath.Ptan,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Tan\n"
"ret 1\n"
"CMath.Pasin,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc ASin\n"
"ret 1\n"
"CMath.Pacos,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc ACos\n"
"ret 1\n"
"CMath.Patan,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc ATan\n"
"ret 1\n"
"CMath.Psinh,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc SinH\n"
"ret 1\n"
"CMath.Pcosh,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc CosH\n"
"ret 1\n"
"CMath.Ptanh,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc TanH\n"
"ret 1\n"
"CMath.Pexp,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Exp\n"
"ret 1\n"
"CMath.Pexp2,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Exp2\n"
"ret 1\n"
"CMath.Ppow,F?b,F?e:\n"
"ldw $tr, ($lb) -8\n"
"push $tr\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Pow\n"
"ret 1\n"
"CMath.Plog,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Log\n"
"ret 1\n"
"CMath.Plog2,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Log2\n"
"ret 1\n"
"CMath.Plog10,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Log10\n"
"ret 1\n"
"CMath.Psqrt,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Sqrt\n"
"ret 1\n"
"CMath.Pceil,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Ceil\n"
"ret 1\n"
"CMath.Pfloor,F?x:\n"
"ldw $tr, ($lb) -4\n"
"push $tr\n"
"insc Floor\n"
"ret 1\n"
"CMath.PrandInt:\n"
"insc RandInt\n"
"ret\n"
"CMath.PrandFloat:\n"
"insc RandFloat\n"
"ret\n"
