/*
 * Float.xx
 * 
 * This file is part of the "XieXie-Compiler" (Copyright (c) 2014 by Lukas Hermanns)
 * See "LICENSE.txt" for license information.
 */

import ASCII, Number, ExceptionHandler

/**
Floating-point class.
@since 2.00
@author Lukas Hermanns
*/
[[final]]
class Float : Number {

	static const max		:= 999999.0		///< Maximal possible floating-point value (INCOMPLETE!).
	static const min		:= -999999.0	///< Minimal possible floating-point value (INCOMPLETE!).
	static const epsilon	:= 0.0001		///< Minimal floating-point increase/decrease stride (INCOMPLETE!).
	
	init() {}
	init(float value) {
		this.value := value
	}
	/// @see Float.parseFrom
	init(String s, ExceptionHandler e := null) {
		value := Float.parseFrom(s, e)
	}
	
	[[override]]
	String toString() {
		//todo: convert to string ...
		return null
	}
	
	int compareTo(Number rhs) {
		if rhs is Float {
			return Number.signum(value - ((Float)rhs).value)
		}
		return Number.uncomparable
	}
	
	int toInteger() {
		return (int)value
	}
	
	float toFloat() {
		return value
	}
	
	static float parseFrom(String s, ExceptionHandler e := null) {
		//todo: convert to float ...
		return 0.0
	}
	
	float value
	
}
