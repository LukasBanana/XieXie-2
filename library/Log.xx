/*
 * Log.xx
 * 
 * This file is part of the "XieXie-Compiler" (Copyright (c) 2014 by Lukas Hermanns)
 * See "LICENSE.txt" for license information.
 */

import Integer
import Stack
import IOStream

/// Common log interface.
class Log {
	
	/// Commits an information.
	void info(String@ message)
	/// Commits a warning.
	void warning(String@ message)
	/// Commits an error.
	void error(String@ message)
	
	/// Increments the message indentation.
	void incIndent()
	/// Decrements the message indentation.
	void decIndent()
	
}

/// Stream log implementation.
class StreamLog : Log {
	
public:
	
	/**
	Initializes the log with the specified stream.
	@param stream Specifies the stream to which the log messages will be written.
	This must not be null!
	*/
	init(OutputStream stream) {
		this.stream := stream
	}
	
	[[override]]
	void info(String@ message) {
		if message != null {
			stream.write(indentState)
			stream.writeLine(message)
		}
	}
	
	[[override]]
	void warning(String@ message) {
		if message != null {
			stream.write(indentState)
			stream.write("warning: ")
			stream.writeLine(message)
		}
	}
	
	[[override]]
	void error(String@ message) {
		if message != null {
			stream.write(indentState)
			stream.write("error: ")
			stream.writeLine(message)
		}
	}
	
	[[override]]
	void incIndent() {
		if indent != null {
			indentStack.push(new Integer(indent.size()))
			indentState.append(indent)
		}
	}
	
	[[override]]
	void decIndent() {
		if not indentStack.empty() {
			Integer len := (Integer)indentStack.top()
			indentState.resize(indentState.size() - len.value)
			indentStack.pop()
		}
	}
	
	String indent := "  "
	
private:
	
	OutputStream stream
	String indentState := ""
	Stack indentStack := new Stack()
	
}
