
// Std I/O Test 1
// 07/03/2015

//import System

class OutputStream {
	void write(String s) {}
	void writeLine(String s) {}
}

class InputStream {
	String read() { return "" }
	String readLine() { return "" }
}

class StandardOutputStream : OutputStream {
	void write(String s) {}
	void writeLine(String s) {}
}

class StandardInputStream : InputStream {
	String read() { return "" }
	String readLine() { return "" }
}

class System {
	init() {
		//out := new StandardInputStream()
		//in := new StandardOutputStream()
		m_out := new StandardOutputStream()
	}
	static OutputStream out
	static InputStream in
	OutputStream m_out
}

class Main {
	
	var v0 := 6
	
	static const c0 := 3, c1
	const c2 := 0.5
	const c3 := Main.c0 > Main.c1
	
	bool b0 := c3
	
	static void main() {
		
		System sys := new System()
		
		System.out.writeLine("ok")			// ok, 'System' is a class and 'out' is static
		//System.m_out.writeLine("error")	// error, 'System' is a class and 'm_out' is non-static
		sys.m_out.writeLine("ok")			// ok, 'sys' is a variable and 'm_out' is non-static
		//sys.out.writeLine("error")		// error, 'sys' is a variable and 'out' is static
		
		int x := System.in.readLine().toString().toString().size()
		
		const pi := 3 + 2						// automatic type deduction for constants (only for int, float, and bool)
		const cb := x > pi
		
		var a := "test", b := { 1 }.toString()	// automatic type deduction
		int c := a.size()
		
		String s1 := "hello"
		String s2 := " "
		String s3 := "world"
		String s4 := s1.add(s2).add(s3)
		
		String[] sl := { "a", "b", "c" }
		int len := sl[0].size()
		
		for int i := 0 ; i < sl[0].size() ; i++ {
			len += "test".size()
			len += ((InputStream)System.in).readLine().add(sl[i]).size()
		}
		
		int num := { 5, { "bar" }.toString().size() }.size()
		num := ((Array){ "test" }).size()
		
		num := sl[0].size()	// sl[0] = String	-> String.size()
		num := sl.size()	// sl = String[]	-> Array.size()
		
		foreach arg : sl {
			int j := arg.size()
			String s := (String)arg.copy()
		}
		
	}
	
}
