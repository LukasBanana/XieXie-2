
// Proc (Overloading) Test 1
// 14/03/2015

class Base {
	
	int[] f(int x, int y, int z) {
		return { x, y, z }
	}
	
	int f(int x) {
		return 0
	}
	
	float[] g(float x) {
		return { x }
	}
	
}

class ProcTest : Base {
	
	static void main() {
		ProcTest app := new ProcTest()
		app.test1(5)
		app.test2(2)
	}
	
	int f(int x) {
		return x*x
	}
	float f(float x) {
		return x*x
	}
	
	int f(int x, int y, int z) {
		return { 0 }
	}
	
	static String f(int x, int y) {
		return null
	}
	
	void test1(int p) {
		
		int		a := f(2)
		float	b := ProcTest.f(2.0)
		String	c := f(1, 2)
		int 	d := this.f(0, 1, 2)
		int[] 	e := super.f(0, 1, 2)
		float[] f := g(0.0)
		
	//	int		a := f(p*2) + ProcTest.f(p+3)
	//	float	b := f((float)p*4.0)
		
	}
	
	void test2(int p) {
		
	}
	
}

